#!/bin/bash
# /usr/local/bin/epgd-conflictsof

# ----------------------------------------------------------------------------
# This script is licensed under the GNU General Public License, Version 2.0.
#
# Original Source: https://github.com/horchi/vdr-epg-daemon
# Modified by: Lapicidae (https://github.com/lapicidae)
# ----------------------------------------------------------------------------


# Set common config file path
common_conf="${common_conf_path:-"/usr/local/etc/epgd-common.sh"}"

if [ ! -r "$common_conf" ]; then
	echo "ERROR: Config file not found or readable: $common_conf" >&2
	exit 1
fi

# Exit on errors, use pipefail, and treat unset variables as an error
set -euo pipefail

# Source the configuration file
# shellcheck source=/dev/null
source "$common_conf"


if [ "$#" -eq 0 ]; then
	printf 'ERROR: No timer ID provided. Please provide a timer ID as argument.\n'
	printf 'Usage: %s <TIMER_ID>\n' "$0"
	exit 1
fi

ID=$1

$DB_USER_COMMAND ' \
select t.id, SUBSTRING_INDEX(t.channelid, "-", 3) as transponder, v.name as vdr, t.source, t.state, \
		t.eventid, from_unixtime(t.day, "%d.%m.%Y") as day, \
		concat_ws(":", right(concat("00", t.starttime DIV 100), 2), right(concat("00", t.starttime%100), 2)) as start, \
		concat_ws(":", right(concat("00", t.endtime DIV 100), 2), right(concat("00", t.endtime%100), 2)) as end, \
		e.title, e.shorttext, t.file  \
	from \
		timers t left outer join events e on (t.eventid = e.masterid), vdrs v,  \
		(select day, starttime, endtime, vdruuid from timers where id = '"$ID"') ti \
	where \
		v.uuid = t.vdruuid \
			and t.state in ("P","R") \
			and t.active = 1 \
			and \
			(      (t.day + t.starttime div 100 * 60 * 60 + t.starttime % 100 * 60 >= ti.day + ti.starttime div 100 * 60 * 60 + ti.starttime % 100 * 60 \
					and t.day + t.starttime div 100 * 60 * 60 + t.starttime % 100 * 60 <= ti.day + ti.endtime div 100 * 60 * 60 + ti.endtime % 100 * 60) \
				or \
						 (t.day + t.endtime div 100 * 60 * 60 + t.endtime % 100 * 60 >= ti.day + ti.starttime div 100 * 60 * 60 + ti.starttime % 100 * 60 \
					and t.day + t.endtime div 100 * 60 * 60 + t.endtime % 100 * 60 <= ti.day + ti.endtime div 100 * 60 * 60 + ti.endtime % 100 * 60) \
			) \
			and t.vdruuid = ti.vdruuid \
	order by t.day, start;'


# vim: ts=4 sw=4 noet:
# kate: space-indent off; indent-width 4; mixed-indent off;
