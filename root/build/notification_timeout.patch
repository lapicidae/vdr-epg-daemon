diff '--color=auto' -ruN vdr-epg-daemon/configs/epgd.conf vdr-epg-daemon.new/configs/epgd.conf
--- vdr-epg-daemon/configs/epgd.conf		2022-04-24 22:55:26.000000000 +0200
+++ vdr-epg-daemon.new/configs/epgd.conf	2022-09-02 21:42:07.101618603 +0200
@@ -48,3 +48,5 @@
 # Password =
 
 LogLevel = 1
+
+# NotifiTimeout = 5
diff '--color=auto' -ruN vdr-epg-daemon/lib/config.c vdr-epg-daemon.new/lib/config.c
--- vdr-epg-daemon/lib/config.c		2022-04-24 22:55:26.000000000 +0200
+++ vdr-epg-daemon.new/lib/config.c	2022-09-02 21:41:07.431608311 +0200
@@ -19,6 +19,8 @@
 int cEpgConfig::logFacility = LOG_USER;
 const char* cEpgConfig::logName = "unknown";
 
+int cEpgConfig::NotifiTimeout = 5;
+
 //***************************************************************************
 // Common EPG Service Configuration
 //***************************************************************************
diff '--color=auto' -ruN vdr-epg-daemon/update.c vdr-epg-daemon.new/update.c
--- vdr-epg-daemon/update.c	2022-04-24 22:55:26.000000000 +0200
+++ vdr-epg-daemon.new/update.c	2022-09-02 21:41:03.418274249 +0200
@@ -382,6 +382,7 @@
    else if (!strcasecmp(Name, "HttpPass"))           sstrcpy(EpgdConfig.httpPass, Value, sizeof(EpgdConfig.httpPass));
 
    else if (!strcasecmp(Name, "LogLevel"))           EpgdConfig.loglevel = EpgdConfig.argLoglevel == na ? atoi(Value) : EpgdConfig.argLoglevel;
+   else if (!strcasecmp(Name, "NotifiTimeout"))      EpgdConfig.NotifiTimeout = atoi(Value);
 
    else
       return fail;
@@ -1799,7 +1800,7 @@
 
                   connection->startTransaction();
 
-                  cSystemNotification::startNotifyThread(5*tmeSecondsPerMinute);
+                  cSystemNotification::startNotifyThread(EpgdConfig.NotifiTimeout*tmeSecondsPerMinute);
                   procMergeEpg->call(2);
                   cSystemNotification::stopNotifyThread();
 
@@ -1876,7 +1877,7 @@
 
       if (!doShutDown())
       {
-         cSystemNotification::startNotifyThread(5*tmeSecondsPerMinute);
+         cSystemNotification::startNotifyThread(EpgdConfig.NotifiTimeout*tmeSecondsPerMinute);
          procMergeEpg->call();
          cSystemNotification::stopNotifyThread();
       }
